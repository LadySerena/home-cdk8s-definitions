// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Placeholder Empty 1`] = `
Array [
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "system-rbac",
      },
      "name": "tel-serena-rolebinding",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin",
    },
    "subjects": Array [
      Object {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "User",
        "name": "serena",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
        "rbac.authorization.k8s.io/aggregate-to-admin": "true",
        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
        "rbac.authorization.k8s.io/aggregate-to-view": "true",
      },
      "name": "system:metrics-server-aggregated-reader",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "metrics.k8s.io",
        ],
        "resources": Array [
          "pods",
          "nodes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "system:metrics-server",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes/metrics",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
          "nodes",
          "namespaces",
          "configmaps",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server:system:auth-delegator",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "system:auth-delegator",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "metrics-server",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "system:metrics-server",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "system:metrics-server",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "metrics-server",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server-auth-reader",
      "namespace": "kube-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "extension-apiserver-authentication-reader",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "metrics-server",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "metrics-server",
      "namespace": "kube-system",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server",
      "namespace": "kube-system",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "metrics-server",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "metrics-server",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--secure-port=4443",
                "--cert-dir=/tmp",
                "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                "--kubelet-use-node-status-port",
                "--metric-resolution=30s",
                "--kubelet-insecure-tls",
              ],
              "image": "k8s.gcr.io/metrics-server/metrics-server:v0.6.1",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": Object {
                "failureThreshold": 4,
                "httpGet": Object {
                  "path": "/livez",
                  "port": "https",
                  "scheme": "HTTPS",
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 10,
              },
              "name": "metrics-server",
              "ports": Array [
                Object {
                  "containerPort": 4443,
                  "name": "https",
                  "protocol": "TCP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/readyz",
                  "port": "https",
                  "scheme": "HTTPS",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/tmp",
                  "name": "tmp",
                },
              ],
            },
          ],
          "priorityClassName": "system-cluster-critical",
          "serviceAccountName": "metrics-server",
          "volumes": Array [
            Object {
              "emptyDir": Object {},
              "name": "tmp",
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "apiregistration.k8s.io/v1",
    "kind": "APIService",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "v1beta1.metrics.k8s.io",
    },
    "spec": Object {
      "group": "metrics.k8s.io",
      "groupPriorityMinimum": 100,
      "insecureSkipTLSVerify": true,
      "service": Object {
        "name": "metrics-server",
        "namespace": "kube-system",
      },
      "version": "v1beta1",
      "versionPriority": 100,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "monitoring.coreos.com",
        ],
        "resources": Array [
          "alertmanagers",
          "alertmanagers/finalizers",
          "alertmanagerconfigs",
          "prometheuses",
          "prometheuses/finalizers",
          "thanosrulers",
          "thanosrulers/finalizers",
          "servicemonitors",
          "podmonitors",
          "probes",
          "prometheusrules",
        ],
        "verbs": Array [
          "*",
        ],
      },
      Object {
        "apiGroups": Array [
          "apps",
        ],
        "resources": Array [
          "statefulsets",
        ],
        "verbs": Array [
          "*",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "secrets",
        ],
        "verbs": Array [
          "*",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
        ],
        "verbs": Array [
          "list",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
          "services/finalizers",
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "create",
          "update",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "automountServiceAccountToken": false,
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
      "namespace": "prometheus-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "prometheus-operator",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "prometheus-operator",
        "namespace": "prometheus-system",
      },
    ],
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
      "namespace": "prometheus-system",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "prometheus-operator",
        },
      },
      "template": Object {
        "metadata": Object {
          "annotations": Object {
            "kubectl.kubernetes.io/default-container": "prometheus-operator",
          },
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "prometheus-operator",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "args": Array [
                "--kubelet-service=kube-system/kubelet",
                "--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.55.1",
              ],
              "image": "quay.io/prometheus-operator/prometheus-operator:v0.55.1",
              "name": "prometheus-operator",
              "ports": Array [
                Object {
                  "containerPort": 8080,
                  "name": "http",
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "200m",
                  "memory": "100Mi",
                },
                "requests": Object {
                  "cpu": "100m",
                  "memory": "100Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "capabilities": Object {
                  "drop": Array [
                    "ALL",
                  ],
                },
                "readOnlyRootFilesystem": true,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "securityContext": Object {
            "runAsNonRoot": true,
            "runAsUser": 65534,
          },
          "serviceAccountName": "prometheus-operator",
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
      "namespace": "prometheus-system",
    },
    "spec": Object {
      "clusterIP": "None",
      "ports": Array [
        Object {
          "name": "http",
          "port": 8080,
          "targetPort": "http",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
        "rbac.serenacodes.com/aggregate-to-cluster-admin": "true",
      },
      "name": "prometheus-crd-admin-roles",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "monitoring.coreos.com",
        ],
        "resources": Array [
          "alertmanagerconfigs",
          "alertmanagers",
          "podmonitors",
          "probes",
          "prometheuses",
          "prometheusrules",
          "servicemonitors",
          "thanosrulers",
        ],
        "verbs": Array [
          "*",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus",
      "namespace": "monitoring",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus",
      "namespace": "monitoring",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "view",
    },
    "subjects": Array [
      Object {
        "apiGroup": "",
        "kind": "ServiceAccount",
        "name": "prometheus",
        "namespace": "monitoring",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
        "monitoring.serenacodes.com/pod-monitor-opt-in": "true",
        "monitoring.serenacodes.com/rule-opt-in": "true",
        "monitoring.serenacodes.com/service-monitor-opt-in": "true",
      },
      "name": "monitoring",
    },
  },
  Object {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "Prometheus",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus",
      "namespace": "monitoring",
    },
    "spec": Object {
      "podMetadata": Object {
        "labels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "prometheus",
        },
      },
      "podMonitorSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/pod-monitor-opt-in": "true",
        },
      },
      "replicas": 1,
      "retention": "2h",
      "ruleNamespaceSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/rule-opt-in": "true",
        },
      },
      "ruleSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/rule-opt-in": "true",
        },
      },
      "serviceAccountName": "prometheus",
      "serviceMonitorNamespaceSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/service-monitor-opt-in": "true",
        },
      },
      "serviceMonitorSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/service-monitor-opt-in": "true",
        },
      },
      "version": "v2.33.5",
      "walCompression": true,
    },
  },
  Object {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "PodMonitor",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
        "monitoring.serenacodes.com/pod-monitor-opt-in": "true",
        "monitoring.serenacodes.com/rule-opt-in": "true",
        "monitoring.serenacodes.com/service-monitor-opt-in": "true",
      },
      "name": "self-monitor",
      "namespace": "monitoring",
    },
    "spec": Object {
      "podMetricsEndpoints": Array [
        Object {
          "path": "/metrics",
          "port": "web",
          "scheme": "http",
        },
        Object {
          "path": "/metrics",
          "port": "reloader-web",
          "scheme": "http",
        },
      ],
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/name": "prometheus",
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus-nodeport",
      "namespace": "monitoring",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 9090,
          "targetPort": "web",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/name": "prometheus",
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "monitoring-ingress",
      "namespace": "monitoring",
    },
    "spec": Object {
      "ingressClassName": "nginx",
      "rules": Array [
        Object {
          "host": "prometheus.internal.serenacodes.com",
          "http": Object {
            "paths": Array [
              Object {
                "backend": Object {
                  "service": Object {
                    "name": "prometheus-nodeport",
                    "port": Object {
                      "name": "web",
                    },
                  },
                },
                "path": "/",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "speaker",
      "namespace": "metallb-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:controller",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "policy",
        ],
        "resourceNames": Array [
          "controller",
        ],
        "resources": Array [
          "podsecuritypolicies",
        ],
        "verbs": Array [
          "use",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:speaker",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
          "endpoints",
          "nodes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "policy",
        ],
        "resourceNames": Array [
          "speaker",
        ],
        "resources": Array [
          "podsecuritypolicies",
        ],
        "verbs": Array [
          "use",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "config-watcher",
      "namespace": "metallb-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "pod-lister",
      "namespace": "metallb-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
        ],
        "verbs": Array [
          "list",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resourceNames": Array [
          "memberlist",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "list",
        ],
      },
      Object {
        "apiGroups": Array [
          "apps",
        ],
        "resourceNames": Array [
          "controller",
        ],
        "resources": Array [
          "deployments",
        ],
        "verbs": Array [
          "get",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:controller",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "metallb-system:controller",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "controller",
        "namespace": "metallb-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:speaker",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "metallb-system:speaker",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "speaker",
        "namespace": "metallb-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "config-watcher",
      "namespace": "metallb-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "config-watcher",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "controller",
      },
      Object {
        "kind": "ServiceAccount",
        "name": "speaker",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "pod-lister",
      "namespace": "metallb-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "pod-lister",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "speaker",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "controller",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "controller",
      },
    ],
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "speaker",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "speaker",
      "namespace": "metallb-system",
    },
    "spec": Object {
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "speaker",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "metallb",
        },
      },
      "template": Object {
        "metadata": Object {
          "annotations": Object {
            "prometheus.io/port": "7472",
            "prometheus.io/scrape": "true",
          },
          "labels": Object {
            "app.kubernetes.io/component": "speaker",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "metallb",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--port=7472",
                "--config=config",
                "--log-level=info",
              ],
              "env": Array [
                Object {
                  "name": "METALLB_NODE_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "spec.nodeName",
                    },
                  },
                },
                Object {
                  "name": "METALLB_HOST",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "status.hostIP",
                    },
                  },
                },
                Object {
                  "name": "METALLB_ML_BIND_ADDR",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "status.podIP",
                    },
                  },
                },
                Object {
                  "name": "METALLB_ML_LABELS",
                  "value": "app=metallb,component=speaker",
                },
                Object {
                  "name": "METALLB_ML_SECRET_KEY",
                  "valueFrom": Object {
                    "secretKeyRef": Object {
                      "key": "secretkey",
                      "name": "memberlist",
                    },
                  },
                },
              ],
              "image": "quay.io/metallb/speaker:v0.12.1",
              "livenessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "speaker",
              "ports": Array [
                Object {
                  "containerPort": 7472,
                  "name": "monitoring",
                },
                Object {
                  "containerPort": 7946,
                  "name": "memberlist-tcp",
                },
                Object {
                  "containerPort": 7946,
                  "name": "memberlist-udp",
                  "protocol": "UDP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "capabilities": Object {
                  "add": Array [
                    "NET_RAW",
                  ],
                  "drop": Array [
                    "ALL",
                  ],
                },
                "readOnlyRootFilesystem": true,
              },
            },
          ],
          "hostNetwork": true,
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "serviceAccountName": "speaker",
          "terminationGracePeriodSeconds": 2,
          "tolerations": Array [
            Object {
              "effect": "NoSchedule",
              "key": "node-role.kubernetes.io/master",
              "operator": "Exists",
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
    "spec": Object {
      "revisionHistoryLimit": 3,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "metallb",
        },
      },
      "template": Object {
        "metadata": Object {
          "annotations": Object {
            "prometheus.io/port": "7472",
            "prometheus.io/scrape": "true",
          },
          "labels": Object {
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "metallb",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--port=7472",
                "--config=config",
                "--log-level=info",
              ],
              "env": Array [
                Object {
                  "name": "METALLB_ML_SECRET_NAME",
                  "value": "memberlist",
                },
                Object {
                  "name": "METALLB_DEPLOYMENT",
                  "value": "controller",
                },
              ],
              "image": "quay.io/metallb/controller:v0.12.1",
              "livenessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "controller",
              "ports": Array [
                Object {
                  "containerPort": 7472,
                  "name": "monitoring",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "capabilities": Object {
                  "drop": Array [
                    "all",
                  ],
                },
                "readOnlyRootFilesystem": true,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "securityContext": Object {
            "fsGroup": 65534,
            "runAsNonRoot": true,
            "runAsUser": 65534,
          },
          "serviceAccountName": "controller",
          "terminationGracePeriodSeconds": 0,
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "config": "address-pools:
- name: default
  protocol: layer2
  addresses:
  - 10.1.192.0/18
",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "config",
      "namespace": "metallb-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx",
      "namespace": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission",
      "namespace": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx",
      "namespace": "ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "pods",
          "secrets",
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resourceNames": Array [
          "ingress-controller-leader",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx-admission",
      "namespace": "ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "endpoints",
          "nodes",
          "pods",
          "secrets",
          "namespaces",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "admissionregistration.k8s.io",
        ],
        "resources": Array [
          "validatingwebhookconfigurations",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx",
      "namespace": "ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx:ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission",
      "namespace": "ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx:ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "allow-snippet-annotations": "true",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller",
      "namespace": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "http",
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": "http",
        },
        Object {
          "appProtocol": "https",
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "LoadBalancer",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller-admission",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "https",
          "name": "https-webhook",
          "port": 443,
          "targetPort": "webhook",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "revisionHistoryLimit": 10,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "ingress-nginx",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "ingress-nginx",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "/nginx-ingress-controller",
                "--election-id=ingress-controller-leader",
                "--controller-class=k8s.io/ingress-nginx",
                "--ingress-class=nginx",
                "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
                "--validating-webhook=:8443",
                "--validating-webhook-certificate=/usr/local/certificates/cert",
                "--validating-webhook-key=/usr/local/certificates/key",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.name",
                    },
                  },
                },
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
                Object {
                  "name": "LD_PRELOAD",
                  "value": "/usr/local/lib/libmimalloc.so",
                },
              ],
              "image": "k8s.gcr.io/ingress-nginx/controller:v1.2.0@sha256:d8196e3bc1e72547c5dec66d6556c0ff92a23f6d0919b206be170bc90d5f9185",
              "imagePullPolicy": "IfNotPresent",
              "lifecycle": Object {
                "preStop": Object {
                  "exec": Object {
                    "command": Array [
                      "/wait-shutdown",
                    ],
                  },
                },
              },
              "livenessProbe": Object {
                "failureThreshold": 5,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "controller",
              "ports": Array [
                Object {
                  "containerPort": 80,
                  "name": "http",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 443,
                  "name": "https",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 8443,
                  "name": "webhook",
                  "protocol": "TCP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "resources": Object {
                "requests": Object {
                  "cpu": "100m",
                  "memory": "90Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": true,
                "capabilities": Object {
                  "add": Array [
                    "NET_BIND_SERVICE",
                  ],
                  "drop": Array [
                    "ALL",
                  ],
                },
                "runAsUser": 101,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/usr/local/certificates/",
                  "name": "webhook-cert",
                  "readOnly": true,
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "serviceAccountName": "ingress-nginx",
          "terminationGracePeriodSeconds": 300,
          "volumes": Array [
            Object {
              "name": "webhook-cert",
              "secret": Object {
                "secretName": "ingress-nginx-admission",
              },
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission-create",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "ingress-nginx",
          },
          "name": "ingress-nginx-admission-create",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "create",
                "--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc",
                "--namespace=$(POD_NAMESPACE)",
                "--secret-name=ingress-nginx-admission",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
              "imagePullPolicy": "IfNotPresent",
              "name": "create",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission-patch",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "ingress-nginx",
          },
          "name": "ingress-nginx-admission-patch",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "patch",
                "--webhook-name=ingress-nginx-admission",
                "--namespace=$(POD_NAMESPACE)",
                "--patch-mutating=false",
                "--secret-name=ingress-nginx-admission",
                "--patch-failure-policy=Fail",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
              "imagePullPolicy": "IfNotPresent",
              "name": "patch",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "IngressClass",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "nginx",
    },
    "spec": Object {
      "controller": "k8s.io/ingress-nginx",
    },
  },
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission",
    },
    "webhooks": Array [
      Object {
        "admissionReviewVersions": Array [
          "v1",
        ],
        "clientConfig": Object {
          "service": Object {
            "name": "ingress-nginx-controller-admission",
            "namespace": "ingress-nginx",
            "path": "/networking/v1/ingresses",
          },
        },
        "failurePolicy": "Fail",
        "matchPolicy": "Equivalent",
        "name": "validate.nginx.ingress.kubernetes.io",
        "rules": Array [
          Object {
            "apiGroups": Array [
              "networking.k8s.io",
            ],
            "apiVersions": Array [
              "v1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "ingresses",
            ],
          },
        ],
        "sideEffects": "None",
      },
    ],
  },
]
`;
