// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Placeholder Empty 1`] = `
Array [
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "system-rbac",
      },
      "name": "tel-serena-rolebinding",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin",
    },
    "subjects": Array [
      Object {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "User",
        "name": "serena",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
        "rbac.authorization.k8s.io/aggregate-to-admin": "true",
        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
        "rbac.authorization.k8s.io/aggregate-to-view": "true",
      },
      "name": "system:metrics-server-aggregated-reader",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "metrics.k8s.io",
        ],
        "resources": Array [
          "pods",
          "nodes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "system:metrics-server",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes/metrics",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
          "nodes",
          "namespaces",
          "configmaps",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server:system:auth-delegator",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "system:auth-delegator",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "metrics-server",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "system:metrics-server",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "system:metrics-server",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "metrics-server",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server-auth-reader",
      "namespace": "kube-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "extension-apiserver-authentication-reader",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "metrics-server",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "metrics-server",
      "namespace": "kube-system",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "metrics-server",
      "namespace": "kube-system",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "metrics-server",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "metrics-server",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--secure-port=4443",
                "--cert-dir=/tmp",
                "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                "--kubelet-use-node-status-port",
                "--metric-resolution=30s",
                "--kubelet-insecure-tls",
              ],
              "image": "k8s.gcr.io/metrics-server/metrics-server:v0.6.1",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": Object {
                "failureThreshold": 4,
                "httpGet": Object {
                  "path": "/livez",
                  "port": "https",
                  "scheme": "HTTPS",
                },
                "initialDelaySeconds": 15,
                "periodSeconds": 10,
              },
              "name": "metrics-server",
              "ports": Array [
                Object {
                  "containerPort": 4443,
                  "name": "https",
                  "protocol": "TCP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/readyz",
                  "port": "https",
                  "scheme": "HTTPS",
                },
                "initialDelaySeconds": 20,
                "periodSeconds": 10,
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "runAsUser": 1000,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/tmp",
                  "name": "tmp",
                },
              ],
            },
          ],
          "priorityClassName": "system-cluster-critical",
          "serviceAccountName": "metrics-server",
          "volumes": Array [
            Object {
              "emptyDir": Object {},
              "name": "tmp",
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "apiregistration.k8s.io/v1",
    "kind": "APIService",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metrics-server",
      },
      "name": "v1beta1.metrics.k8s.io",
    },
    "spec": Object {
      "group": "metrics.k8s.io",
      "groupPriorityMinimum": 100,
      "insecureSkipTLSVerify": true,
      "service": Object {
        "name": "metrics-server",
        "namespace": "kube-system",
      },
      "version": "v1beta1",
      "versionPriority": 100,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "monitoring.coreos.com",
        ],
        "resources": Array [
          "alertmanagers",
          "alertmanagers/finalizers",
          "alertmanagerconfigs",
          "prometheuses",
          "prometheuses/finalizers",
          "thanosrulers",
          "thanosrulers/finalizers",
          "servicemonitors",
          "podmonitors",
          "probes",
          "prometheusrules",
        ],
        "verbs": Array [
          "*",
        ],
      },
      Object {
        "apiGroups": Array [
          "apps",
        ],
        "resources": Array [
          "statefulsets",
        ],
        "verbs": Array [
          "*",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "secrets",
        ],
        "verbs": Array [
          "*",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
        ],
        "verbs": Array [
          "list",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
          "services/finalizers",
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "create",
          "update",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "automountServiceAccountToken": false,
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
      "namespace": "prometheus-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "prometheus-operator",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "prometheus-operator",
        "namespace": "prometheus-system",
      },
    ],
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
      "namespace": "prometheus-system",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "prometheus-operator",
        },
      },
      "template": Object {
        "metadata": Object {
          "annotations": Object {
            "kubectl.kubernetes.io/default-container": "prometheus-operator",
          },
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "prometheus-operator",
          },
        },
        "spec": Object {
          "automountServiceAccountToken": true,
          "containers": Array [
            Object {
              "args": Array [
                "--kubelet-service=kube-system/kubelet",
                "--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.55.1",
              ],
              "image": "quay.io/prometheus-operator/prometheus-operator:v0.55.1",
              "name": "prometheus-operator",
              "ports": Array [
                Object {
                  "containerPort": 8080,
                  "name": "http",
                },
              ],
              "resources": Object {
                "limits": Object {
                  "cpu": "200m",
                  "memory": "100Mi",
                },
                "requests": Object {
                  "cpu": "100m",
                  "memory": "100Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "capabilities": Object {
                  "drop": Array [
                    "ALL",
                  ],
                },
                "readOnlyRootFilesystem": true,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "securityContext": Object {
            "runAsNonRoot": true,
            "runAsUser": 65534,
          },
          "serviceAccountName": "prometheus-operator",
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
      "name": "prometheus-operator",
      "namespace": "prometheus-system",
    },
    "spec": Object {
      "clusterIP": "None",
      "ports": Array [
        Object {
          "name": "http",
          "port": 8080,
          "targetPort": "http",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
      },
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus-operator",
        "rbac.serenacodes.com/aggregate-to-cluster-admin": "true",
      },
      "name": "prometheus-crd-admin-roles",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "monitoring.coreos.com",
        ],
        "resources": Array [
          "alertmanagerconfigs",
          "alertmanagers",
          "podmonitors",
          "probes",
          "prometheuses",
          "prometheusrules",
          "servicemonitors",
          "thanosrulers",
        ],
        "verbs": Array [
          "*",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus",
      "namespace": "monitoring",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus",
      "namespace": "monitoring",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "view",
    },
    "subjects": Array [
      Object {
        "apiGroup": "",
        "kind": "ServiceAccount",
        "name": "prometheus",
        "namespace": "monitoring",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
        "monitoring.serenacodes.com/pod-monitor-opt-in": "true",
        "monitoring.serenacodes.com/rule-opt-in": "true",
        "monitoring.serenacodes.com/service-monitor-opt-in": "true",
      },
      "name": "monitoring",
    },
  },
  Object {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "Prometheus",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus",
      "namespace": "monitoring",
    },
    "spec": Object {
      "podMetadata": Object {
        "labels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "prometheus",
        },
      },
      "podMonitorSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/pod-monitor-opt-in": "true",
        },
      },
      "replicas": 1,
      "retention": "2h",
      "ruleNamespaceSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/rule-opt-in": "true",
        },
      },
      "ruleSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/rule-opt-in": "true",
        },
      },
      "serviceAccountName": "prometheus",
      "serviceMonitorNamespaceSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/service-monitor-opt-in": "true",
        },
      },
      "serviceMonitorSelector": Object {
        "matchLabels": Object {
          "monitoring.serenacodes.com/service-monitor-opt-in": "true",
        },
      },
      "version": "v2.33.5",
      "walCompression": true,
    },
  },
  Object {
    "apiVersion": "monitoring.coreos.com/v1",
    "kind": "PodMonitor",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
        "monitoring.serenacodes.com/pod-monitor-opt-in": "true",
        "monitoring.serenacodes.com/rule-opt-in": "true",
        "monitoring.serenacodes.com/service-monitor-opt-in": "true",
      },
      "name": "self-monitor",
      "namespace": "monitoring",
    },
    "spec": Object {
      "podMetricsEndpoints": Array [
        Object {
          "path": "/metrics",
          "port": "web",
          "scheme": "http",
        },
        Object {
          "path": "/metrics",
          "port": "reloader-web",
          "scheme": "http",
        },
      ],
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/name": "prometheus",
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "prometheus-nodeport",
      "namespace": "monitoring",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 9090,
          "targetPort": "web",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/name": "prometheus",
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "prometheus",
      },
      "name": "monitoring-ingress",
      "namespace": "monitoring",
    },
    "spec": Object {
      "ingressClassName": "nginx",
      "rules": Array [
        Object {
          "host": "prometheus.internal.serenacodes.com",
          "http": Object {
            "paths": Array [
              Object {
                "backend": Object {
                  "service": Object {
                    "name": "prometheus-nodeport",
                    "port": Object {
                      "name": "web",
                    },
                  },
                },
                "path": "/",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "speaker",
      "namespace": "metallb-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:controller",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "policy",
        ],
        "resourceNames": Array [
          "controller",
        ],
        "resources": Array [
          "podsecuritypolicies",
        ],
        "verbs": Array [
          "use",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:speaker",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
          "endpoints",
          "nodes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "policy",
        ],
        "resourceNames": Array [
          "speaker",
        ],
        "resources": Array [
          "podsecuritypolicies",
        ],
        "verbs": Array [
          "use",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "config-watcher",
      "namespace": "metallb-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "pod-lister",
      "namespace": "metallb-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
        ],
        "verbs": Array [
          "list",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resourceNames": Array [
          "memberlist",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "list",
        ],
      },
      Object {
        "apiGroups": Array [
          "apps",
        ],
        "resourceNames": Array [
          "controller",
        ],
        "resources": Array [
          "deployments",
        ],
        "verbs": Array [
          "get",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:controller",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "metallb-system:controller",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "controller",
        "namespace": "metallb-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "metallb-system:speaker",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "metallb-system:speaker",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "speaker",
        "namespace": "metallb-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "config-watcher",
      "namespace": "metallb-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "config-watcher",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "controller",
      },
      Object {
        "kind": "ServiceAccount",
        "name": "speaker",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "pod-lister",
      "namespace": "metallb-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "pod-lister",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "speaker",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "controller",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "controller",
      },
    ],
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "speaker",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "speaker",
      "namespace": "metallb-system",
    },
    "spec": Object {
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "speaker",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "metallb",
        },
      },
      "template": Object {
        "metadata": Object {
          "annotations": Object {
            "prometheus.io/port": "7472",
            "prometheus.io/scrape": "true",
          },
          "labels": Object {
            "app.kubernetes.io/component": "speaker",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "metallb",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--port=7472",
                "--config=config",
                "--log-level=info",
              ],
              "env": Array [
                Object {
                  "name": "METALLB_NODE_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "spec.nodeName",
                    },
                  },
                },
                Object {
                  "name": "METALLB_HOST",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "status.hostIP",
                    },
                  },
                },
                Object {
                  "name": "METALLB_ML_BIND_ADDR",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "status.podIP",
                    },
                  },
                },
                Object {
                  "name": "METALLB_ML_LABELS",
                  "value": "app=metallb,component=speaker",
                },
                Object {
                  "name": "METALLB_ML_SECRET_KEY",
                  "valueFrom": Object {
                    "secretKeyRef": Object {
                      "key": "secretkey",
                      "name": "memberlist",
                    },
                  },
                },
              ],
              "image": "quay.io/metallb/speaker:v0.12.1",
              "livenessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "speaker",
              "ports": Array [
                Object {
                  "containerPort": 7472,
                  "name": "monitoring",
                },
                Object {
                  "containerPort": 7946,
                  "name": "memberlist-tcp",
                },
                Object {
                  "containerPort": 7946,
                  "name": "memberlist-udp",
                  "protocol": "UDP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "capabilities": Object {
                  "add": Array [
                    "NET_RAW",
                  ],
                  "drop": Array [
                    "ALL",
                  ],
                },
                "readOnlyRootFilesystem": true,
              },
            },
          ],
          "hostNetwork": true,
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "serviceAccountName": "speaker",
          "terminationGracePeriodSeconds": 2,
          "tolerations": Array [
            Object {
              "effect": "NoSchedule",
              "key": "node-role.kubernetes.io/master",
              "operator": "Exists",
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "metallb",
      },
      "name": "controller",
      "namespace": "metallb-system",
    },
    "spec": Object {
      "revisionHistoryLimit": 3,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "metallb",
        },
      },
      "template": Object {
        "metadata": Object {
          "annotations": Object {
            "prometheus.io/port": "7472",
            "prometheus.io/scrape": "true",
          },
          "labels": Object {
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "metallb",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--port=7472",
                "--config=config",
                "--log-level=info",
              ],
              "env": Array [
                Object {
                  "name": "METALLB_ML_SECRET_NAME",
                  "value": "memberlist",
                },
                Object {
                  "name": "METALLB_DEPLOYMENT",
                  "value": "controller",
                },
              ],
              "image": "quay.io/metallb/controller:v0.12.1",
              "livenessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "controller",
              "ports": Array [
                Object {
                  "containerPort": 7472,
                  "name": "monitoring",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/metrics",
                  "port": "monitoring",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
                "capabilities": Object {
                  "drop": Array [
                    "all",
                  ],
                },
                "readOnlyRootFilesystem": true,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "securityContext": Object {
            "fsGroup": 65534,
            "runAsNonRoot": true,
            "runAsUser": 65534,
          },
          "serviceAccountName": "controller",
          "terminationGracePeriodSeconds": 0,
        },
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "config": "address-pools:
- name: default
  protocol: layer2
  addresses:
  - 10.1.192.0/18
",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "config",
      "namespace": "metallb-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx",
      "namespace": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission",
      "namespace": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx",
      "namespace": "ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "pods",
          "secrets",
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resourceNames": Array [
          "ingress-controller-leader",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx-admission",
      "namespace": "ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "configmaps",
          "endpoints",
          "nodes",
          "pods",
          "secrets",
          "namespaces",
        ],
        "verbs": Array [
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingressclasses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "admissionregistration.k8s.io",
        ],
        "resources": Array [
          "validatingwebhookconfigurations",
        ],
        "verbs": Array [
          "get",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx",
      "namespace": "ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx:ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission",
      "namespace": "ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx:ingress-nginx",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "ingress-nginx:ingress-nginx-admission",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "ingress-nginx-admission",
        "namespace": "ingress-nginx",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "allow-snippet-annotations": "true",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller",
      "namespace": "ingress-nginx",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "http",
          "name": "http",
          "port": 80,
          "protocol": "TCP",
          "targetPort": "http",
        },
        Object {
          "appProtocol": "https",
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "LoadBalancer",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller-admission",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "appProtocol": "https",
          "name": "https-webhook",
          "port": 443,
          "targetPort": "webhook",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-controller",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "minReadySeconds": 0,
      "revisionHistoryLimit": 10,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "ingress-nginx",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "ingress-nginx",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "/nginx-ingress-controller",
                "--election-id=ingress-controller-leader",
                "--controller-class=k8s.io/ingress-nginx",
                "--ingress-class=nginx",
                "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
                "--validating-webhook=:8443",
                "--validating-webhook-certificate=/usr/local/certificates/cert",
                "--validating-webhook-key=/usr/local/certificates/key",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.name",
                    },
                  },
                },
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
                Object {
                  "name": "LD_PRELOAD",
                  "value": "/usr/local/lib/libmimalloc.so",
                },
              ],
              "image": "gcr.io/k8s-staging-ingress-nginx/controller-chroot:v1.2.0",
              "imagePullPolicy": "IfNotPresent",
              "lifecycle": Object {
                "preStop": Object {
                  "exec": Object {
                    "command": Array [
                      "/wait-shutdown",
                    ],
                  },
                },
              },
              "livenessProbe": Object {
                "failureThreshold": 5,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "controller",
              "ports": Array [
                Object {
                  "containerPort": 80,
                  "name": "http",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 443,
                  "name": "https",
                  "protocol": "TCP",
                },
                Object {
                  "containerPort": 8443,
                  "name": "webhook",
                  "protocol": "TCP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 10254,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "resources": Object {
                "requests": Object {
                  "cpu": "100m",
                  "memory": "90Mi",
                },
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": true,
                "capabilities": Object {
                  "add": Array [
                    "NET_BIND_SERVICE",
                    "SYS_CHROOT",
                  ],
                  "drop": Array [
                    "ALL",
                  ],
                },
                "runAsUser": 101,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/usr/local/certificates/",
                  "name": "webhook-cert",
                  "readOnly": true,
                },
              ],
            },
          ],
          "dnsPolicy": "ClusterFirst",
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "serviceAccountName": "ingress-nginx",
          "terminationGracePeriodSeconds": 300,
          "volumes": Array [
            Object {
              "name": "webhook-cert",
              "secret": Object {
                "secretName": "ingress-nginx-admission",
              },
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission-create",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "ingress-nginx",
          },
          "name": "ingress-nginx-admission-create",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "create",
                "--host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc",
                "--namespace=$(POD_NAMESPACE)",
                "--secret-name=ingress-nginx-admission",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
              "imagePullPolicy": "IfNotPresent",
              "name": "create",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
  Object {
    "apiVersion": "batch/v1",
    "kind": "Job",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission-patch",
      "namespace": "ingress-nginx",
    },
    "spec": Object {
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "ingress-nginx",
          },
          "name": "ingress-nginx-admission-patch",
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "patch",
                "--webhook-name=ingress-nginx-admission",
                "--namespace=$(POD_NAMESPACE)",
                "--patch-mutating=false",
                "--secret-name=ingress-nginx-admission",
                "--patch-failure-policy=Fail",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
              "imagePullPolicy": "IfNotPresent",
              "name": "patch",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "restartPolicy": "OnFailure",
          "securityContext": Object {
            "fsGroup": 2000,
            "runAsNonRoot": true,
            "runAsUser": 2000,
          },
          "serviceAccountName": "ingress-nginx-admission",
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "IngressClass",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "nginx",
    },
    "spec": Object {
      "controller": "k8s.io/ingress-nginx",
    },
  },
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "ingress-nginx",
      },
      "name": "ingress-nginx-admission",
    },
    "webhooks": Array [
      Object {
        "admissionReviewVersions": Array [
          "v1",
        ],
        "clientConfig": Object {
          "service": Object {
            "name": "ingress-nginx-controller-admission",
            "namespace": "ingress-nginx",
            "path": "/networking/v1/ingresses",
          },
        },
        "failurePolicy": "Fail",
        "matchPolicy": "Equivalent",
        "name": "validate.nginx.ingress.kubernetes.io",
        "rules": Array [
          Object {
            "apiGroups": Array [
              "networking.k8s.io",
            ],
            "apiVersions": Array [
              "v1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "ingresses",
            ],
          },
        ],
        "sideEffects": "None",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-cainjector",
      "namespace": "cert-manager",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager",
      "namespace": "cert-manager",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook",
      "namespace": "cert-manager",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {},
    "kind": "ConfigMap",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook",
      "namespace": "cert-manager",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-cainjector",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "get",
          "create",
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "admissionregistration.k8s.io",
        ],
        "resources": Array [
          "validatingwebhookconfigurations",
          "mutatingwebhookconfigurations",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "apiregistration.k8s.io",
        ],
        "resources": Array [
          "apiservices",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "apiextensions.k8s.io",
        ],
        "resources": Array [
          "customresourcedefinitions",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-issuers",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "issuers",
          "issuers/status",
        ],
        "verbs": Array [
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "issuers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-clusterissuers",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "clusterissuers",
          "clusterissuers/status",
        ],
        "verbs": Array [
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "clusterissuers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-certificates",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates",
          "certificates/status",
          "certificaterequests",
          "certificaterequests/status",
        ],
        "verbs": Array [
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates",
          "certificaterequests",
          "clusterissuers",
          "issuers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates/finalizers",
          "certificaterequests/finalizers",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "orders",
        ],
        "verbs": Array [
          "create",
          "delete",
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "create",
          "update",
          "delete",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-orders",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "orders",
          "orders/status",
        ],
        "verbs": Array [
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "orders",
          "challenges",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "clusterissuers",
          "issuers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "challenges",
        ],
        "verbs": Array [
          "create",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "orders/finalizers",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-challenges",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "challenges",
          "challenges/status",
        ],
        "verbs": Array [
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "challenges",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "issuers",
          "clusterissuers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "create",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "create",
          "delete",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "gateway.networking.k8s.io",
        ],
        "resources": Array [
          "httproutes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "create",
          "delete",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "route.openshift.io",
        ],
        "resources": Array [
          "routes/custom-host",
        ],
        "verbs": Array [
          "create",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "challenges/finalizers",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-ingress-shim",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates",
          "certificaterequests",
        ],
        "verbs": Array [
          "create",
          "update",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates",
          "certificaterequests",
          "issuers",
          "clusterissuers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "ingresses/finalizers",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "gateway.networking.k8s.io",
        ],
        "resources": Array [
          "gateways",
          "httproutes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "gateway.networking.k8s.io",
        ],
        "resources": Array [
          "gateways/finalizers",
          "httproutes/finalizers",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "events",
        ],
        "verbs": Array [
          "create",
          "patch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
        "rbac.authorization.k8s.io/aggregate-to-admin": "true",
        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
        "rbac.authorization.k8s.io/aggregate-to-view": "true",
      },
      "name": "cert-manager:cert-manager-view",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates",
          "certificaterequests",
          "issuers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "challenges",
          "orders",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
        "rbac.authorization.k8s.io/aggregate-to-admin": "true",
        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
      },
      "name": "cert-manager:cert-manager-edit",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates",
          "certificaterequests",
          "issuers",
        ],
        "verbs": Array [
          "create",
          "delete",
          "deletecollection",
          "patch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resources": Array [
          "certificates/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "acme.cert-manager.io",
        ],
        "resources": Array [
          "challenges",
          "orders",
        ],
        "verbs": Array [
          "create",
          "delete",
          "deletecollection",
          "patch",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-approve:cert-manager-io",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "cert-manager.io",
        ],
        "resourceNames": Array [
          "issuers.cert-manager.io/*",
          "clusterissuers.cert-manager.io/*",
        ],
        "resources": Array [
          "signers",
        ],
        "verbs": Array [
          "approve",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-certificatesigningrequests",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "certificates.k8s.io",
        ],
        "resources": Array [
          "certificatesigningrequests",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "certificates.k8s.io",
        ],
        "resources": Array [
          "certificatesigningrequests/status",
        ],
        "verbs": Array [
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "certificates.k8s.io",
        ],
        "resourceNames": Array [
          "issuers.cert-manager.io/*",
          "clusterissuers.cert-manager.io/*",
        ],
        "resources": Array [
          "signers",
        ],
        "verbs": Array [
          "sign",
        ],
      },
      Object {
        "apiGroups": Array [
          "authorization.k8s.io",
        ],
        "resources": Array [
          "subjectaccessreviews",
        ],
        "verbs": Array [
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-webhook:subjectaccessreviews",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "authorization.k8s.io",
        ],
        "resources": Array [
          "subjectaccessreviews",
        ],
        "verbs": Array [
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-cainjector",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-cainjector",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager-cainjector",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-issuers",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-issuers",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-clusterissuers",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-clusterissuers",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-certificates",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-certificates",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-orders",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-orders",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-challenges",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-challenges",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-ingress-shim",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-ingress-shim",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-approve:cert-manager-io",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-approve:cert-manager-io",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-controller-certificatesigningrequests",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-controller-certificatesigningrequests",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:cert-manager-webhook:subjectaccessreviews",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cert-manager:cert-manager-webhook:subjectaccessreviews",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager-webhook",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-cainjector:leaderelection",
      "namespace": "kube-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resourceNames": Array [
          "cert-manager-cainjector-leader-election",
          "cert-manager-cainjector-leader-election-core",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "get",
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:leaderelection",
      "namespace": "kube-system",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resourceNames": Array [
          "cert-manager-controller",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "get",
          "update",
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "Role",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook:dynamic-serving",
      "namespace": "cert-manager",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resourceNames": Array [
          "cert-manager-webhook-ca",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "secrets",
        ],
        "verbs": Array [
          "create",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-cainjector:leaderelection",
      "namespace": "kube-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "cert-manager-cainjector:leaderelection",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager-cainjector",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager:leaderelection",
      "namespace": "kube-system",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "cert-manager:leaderelection",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "RoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook:dynamic-serving",
      "namespace": "cert-manager",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "cert-manager-webhook:dynamic-serving",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cert-manager-webhook",
        "namespace": "cert-manager",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager",
      "namespace": "cert-manager",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "name": "tcp-prometheus-servicemonitor",
          "port": 9402,
          "protocol": "TCP",
          "targetPort": 9402,
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "cert-manager",
        "app.kubernetes.io/name": "cert-manager",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-server",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook",
      "namespace": "cert-manager",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "name": "https",
          "port": 443,
          "protocol": "TCP",
          "targetPort": "https",
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "cert-manager",
        "app.kubernetes.io/name": "webhook",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "cainjector",
        "app.kubernetes.io/component": "cainjector",
        "app.kubernetes.io/instance": "cert-manager",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cainjector",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-cainjector",
      "namespace": "cert-manager",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "cainjector",
          "app.kubernetes.io/instance": "cert-manager",
          "app.kubernetes.io/name": "cainjector",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "cainjector",
            "app.kubernetes.io/component": "cainjector",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "cainjector",
            "app.kubernetes.io/version": "v1.8.0",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--v=2",
                "--leader-election-namespace=kube-system",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "quay.io/jetstack/cert-manager-cainjector:v1.8.0",
              "imagePullPolicy": "IfNotPresent",
              "name": "cert-manager",
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "securityContext": Object {
            "runAsNonRoot": true,
          },
          "serviceAccountName": "cert-manager-cainjector",
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "cert-manager",
        "app.kubernetes.io/component": "controller",
        "app.kubernetes.io/instance": "cert-manager",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cert-manager",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager",
      "namespace": "cert-manager",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "cert-manager",
          "app.kubernetes.io/name": "cert-manager",
        },
      },
      "template": Object {
        "metadata": Object {
          "annotations": Object {
            "prometheus.io/path": "/metrics",
            "prometheus.io/port": "9402",
            "prometheus.io/scrape": "true",
          },
          "labels": Object {
            "app": "cert-manager",
            "app.kubernetes.io/component": "controller",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "cert-manager",
            "app.kubernetes.io/version": "v1.8.0",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--v=2",
                "--cluster-resource-namespace=$(POD_NAMESPACE)",
                "--leader-election-namespace=kube-system",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "value": "certificate-authority",
                },
              ],
              "image": "quay.io/jetstack/cert-manager-controller:v1.8.0",
              "imagePullPolicy": "IfNotPresent",
              "name": "cert-manager",
              "ports": Array [
                Object {
                  "containerPort": 9402,
                  "name": "http-metrics",
                  "protocol": "TCP",
                },
              ],
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "securityContext": Object {
            "runAsNonRoot": true,
          },
          "serviceAccountName": "cert-manager",
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app": "webhook",
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "cert-manager",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "webhook",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook",
      "namespace": "cert-manager",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "webhook",
          "app.kubernetes.io/instance": "cert-manager",
          "app.kubernetes.io/name": "webhook",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "webhook",
            "app.kubernetes.io/component": "webhook",
            "app.kubernetes.io/instance": "cert-manager",
            "app.kubernetes.io/name": "webhook",
            "app.kubernetes.io/version": "v1.8.0",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--v=2",
                "--secure-port=10250",
                "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                "--dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc",
              ],
              "env": Array [
                Object {
                  "name": "POD_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
              ],
              "image": "quay.io/jetstack/cert-manager-webhook:v1.8.0",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/livez",
                  "port": 6080,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "name": "cert-manager",
              "ports": Array [
                Object {
                  "containerPort": 10250,
                  "name": "https",
                  "protocol": "TCP",
                },
              ],
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "path": "/healthz",
                  "port": 6080,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "successThreshold": 1,
                "timeoutSeconds": 1,
              },
              "securityContext": Object {
                "allowPrivilegeEscalation": false,
              },
            },
          ],
          "nodeSelector": Object {
            "kubernetes.io/os": "linux",
          },
          "securityContext": Object {
            "runAsNonRoot": true,
          },
          "serviceAccountName": "cert-manager-webhook",
        },
      },
    },
  },
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "MutatingWebhookConfiguration",
    "metadata": Object {
      "annotations": Object {
        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
      },
      "labels": Object {
        "app": "webhook",
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "cert-manager",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "webhook",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook",
    },
    "webhooks": Array [
      Object {
        "admissionReviewVersions": Array [
          "v1",
        ],
        "clientConfig": Object {
          "service": Object {
            "name": "cert-manager-webhook",
            "namespace": "cert-manager",
            "path": "/mutate",
          },
        },
        "failurePolicy": "Fail",
        "matchPolicy": "Equivalent",
        "name": "webhook.cert-manager.io",
        "rules": Array [
          Object {
            "apiGroups": Array [
              "cert-manager.io",
              "acme.cert-manager.io",
            ],
            "apiVersions": Array [
              "v1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "*/*",
            ],
          },
        ],
        "sideEffects": "None",
        "timeoutSeconds": 10,
      },
    ],
  },
  Object {
    "apiVersion": "admissionregistration.k8s.io/v1",
    "kind": "ValidatingWebhookConfiguration",
    "metadata": Object {
      "annotations": Object {
        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
      },
      "labels": Object {
        "app": "webhook",
        "app.kubernetes.io/component": "webhook",
        "app.kubernetes.io/instance": "cert-manager",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "webhook",
        "app.kubernetes.io/version": "v1.8.0",
      },
      "name": "cert-manager-webhook",
    },
    "webhooks": Array [
      Object {
        "admissionReviewVersions": Array [
          "v1",
        ],
        "clientConfig": Object {
          "service": Object {
            "name": "cert-manager-webhook",
            "namespace": "cert-manager",
            "path": "/validate",
          },
        },
        "failurePolicy": "Fail",
        "matchPolicy": "Equivalent",
        "name": "webhook.cert-manager.io",
        "namespaceSelector": Object {
          "matchExpressions": Array [
            Object {
              "key": "cert-manager.io/disable-validation",
              "operator": "NotIn",
              "values": Array [
                "true",
              ],
            },
            Object {
              "key": "name",
              "operator": "NotIn",
              "values": Array [
                "cert-manager",
              ],
            },
          ],
        },
        "rules": Array [
          Object {
            "apiGroups": Array [
              "cert-manager.io",
              "acme.cert-manager.io",
            ],
            "apiVersions": Array [
              "v1",
            ],
            "operations": Array [
              "CREATE",
              "UPDATE",
            ],
            "resources": Array [
              "*/*",
            ],
          },
        ],
        "sideEffects": "None",
        "timeoutSeconds": 10,
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Namespace",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "serena-ca",
      },
      "name": "certificate-authority",
    },
  },
  Object {
    "apiVersion": "cert-manager.io/v1",
    "kind": "ClusterIssuer",
    "metadata": Object {
      "name": "self-signed",
    },
    "spec": Object {
      "selfSigned": Object {},
    },
  },
  Object {
    "apiVersion": "cert-manager.io/v1",
    "kind": "Certificate",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "serena-ca",
      },
      "name": "serena-ca",
      "namespace": "certificate-authority",
    },
    "spec": Object {
      "commonName": "home-ca-root",
      "duration": "8766h",
      "isCA": true,
      "issuerRef": Object {
        "group": "cert-manager.io",
        "kind": "ClusterIssuer",
        "name": "self-signed",
      },
      "privateKey": Object {
        "algorithm": "ECDSA",
        "size": 256,
      },
      "secretName": "root-ca",
      "subject": Object {
        "countries": Array [
          "US",
        ],
        "organizations": Array [
          "serena homelab",
        ],
      },
    },
  },
  Object {
    "apiVersion": "cert-manager.io/v1",
    "kind": "ClusterIssuer",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "serena-ca",
      },
      "name": "serena-ca",
      "namespace": "certificate-authority",
    },
    "spec": Object {
      "ca": Object {
        "secretName": "root-ca",
      },
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "cilium",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "cilium-operator",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-relay",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "ServiceAccount",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-ui",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "cert-manager.io/v1",
    "kind": "Certificate",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-relay-client-certs",
      "namespace": "kube-system",
    },
    "spec": Object {
      "commonName": "*.hubble-relay.cilium.io",
      "dnsNames": Array [
        "*.hubble-relay.cilium.io",
      ],
      "duration": "26280h",
      "issuerRef": Object {
        "group": "cert-manager.io",
        "kind": "ClusterIssuer",
        "name": "serena-ca",
      },
      "secretName": "hubble-relay-client-certs",
    },
  },
  Object {
    "apiVersion": "cert-manager.io/v1",
    "kind": "Certificate",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-server-certs",
      "namespace": "kube-system",
    },
    "spec": Object {
      "commonName": "*.default.hubble-grpc.cilium.io",
      "dnsNames": Array [
        "*.default.hubble-grpc.cilium.io",
      ],
      "duration": "26280h",
      "issuerRef": Object {
        "group": "cert-manager.io",
        "kind": "ClusterIssuer",
        "name": "serena-ca",
      },
      "secretName": "hubble-server-certs",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "auto-direct-node-routes": "false",
      "bpf-lb-external-clusterip": "false",
      "bpf-lb-map-max": "65536",
      "bpf-map-dynamic-size-ratio": "0.0025",
      "bpf-policy-map-max": "16384",
      "cgroup-root": "/run/cilium/cgroupv2",
      "cilium-endpoint-gc-interval": "5m0s",
      "cluster-id": "",
      "cluster-name": "default",
      "cluster-pool-ipv4-cidr": "10.0.128.0/17",
      "cluster-pool-ipv4-mask-size": "24",
      "custom-cni-conf": "false",
      "debug": "false",
      "disable-cnp-status-updates": "true",
      "disable-endpoint-crd": "false",
      "enable-auto-protect-node-port-range": "true",
      "enable-bandwidth-manager": "false",
      "enable-bpf-clock-probe": "true",
      "enable-endpoint-health-checking": "true",
      "enable-health-check-nodeport": "true",
      "enable-health-checking": "true",
      "enable-hubble": "true",
      "enable-ipv4": "true",
      "enable-ipv4-masquerade": "true",
      "enable-ipv6": "false",
      "enable-ipv6-masquerade": "true",
      "enable-k8s-terminating-endpoint": "true",
      "enable-l2-neigh-discovery": "true",
      "enable-l7-proxy": "true",
      "enable-local-redirect-policy": "false",
      "enable-policy": "default",
      "enable-remote-node-identity": "true",
      "enable-session-affinity": "true",
      "enable-well-known-identities": "false",
      "enable-xt-socket-fallback": "true",
      "hubble-disable-tls": "false",
      "hubble-listen-address": ":4244",
      "hubble-metrics": "dns drop tcp flow icmp http",
      "hubble-metrics-server": ":9091",
      "hubble-socket-path": "/var/run/cilium/hubble.sock",
      "hubble-tls-cert-file": "/var/lib/cilium/tls/hubble/server.crt",
      "hubble-tls-client-ca-files": "/var/lib/cilium/tls/hubble/client-ca.crt",
      "hubble-tls-key-file": "/var/lib/cilium/tls/hubble/server.key",
      "identity-allocation-mode": "crd",
      "install-iptables-rules": "true",
      "install-no-conntrack-iptables-rules": "false",
      "ipam": "cluster-pool",
      "kube-proxy-replacement": "strict",
      "kube-proxy-replacement-healthz-bind-address": "",
      "monitor-aggregation": "medium",
      "monitor-aggregation-flags": "all",
      "monitor-aggregation-interval": "5s",
      "node-port-bind-protection": "true",
      "operator-api-serve-addr": "127.0.0.1:9234",
      "preallocate-bpf-maps": "false",
      "sidecar-istio-proxy-image": "cilium/istio_proxy",
      "tunnel": "geneve",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "cilium-config",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "config.yaml": "peer-service: unix:///var/run/cilium/hubble.sock
listen-address: :4245
dial-timeout: 
retry-timeout: 
sort-buffer-len-max: 
sort-buffer-drain-timeout: 
tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
tls-client-key-file: /var/lib/hubble-relay/tls/client.key
tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
disable-server-tls: true
",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-relay-config",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "envoy.yaml": "static_resources:
  listeners:
    - name: listener_hubble_ui
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                \\"@type\\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: [\\"*\\"]
                      routes:
                        - match:
                            prefix: \\"/api/\\"
                          route:
                            cluster: backend
                            prefix_rewrite: \\"/\\"
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: \\"/\\"
                          route:
                            cluster: frontend
                      cors:
                        allow_origin_string_match:
                          - prefix: \\"*\\"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: \\"1728000\\"
                        expose_headers: grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.router
  clusters:
    - name: frontend
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: frontend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8080
    - name: backend
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: round_robin
      http2_protocol_options: {}
      load_assignment:
        cluster_name: backend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8090
",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-ui-envoy",
      "namespace": "kube-system",
    },
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "kube-system:cilium",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "networkpolicies",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "namespaces",
          "services",
          "nodes",
          "endpoints",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
          "pods/finalizers",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "update",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "nodes",
          "nodes/status",
        ],
        "verbs": Array [
          "patch",
        ],
      },
      Object {
        "apiGroups": Array [
          "apiextensions.k8s.io",
        ],
        "resources": Array [
          "customresourcedefinitions",
        ],
        "verbs": Array [
          "create",
          "list",
          "watch",
          "update",
          "get",
        ],
      },
      Object {
        "apiGroups": Array [
          "cilium.io",
        ],
        "resources": Array [
          "ciliumnetworkpolicies",
          "ciliumnetworkpolicies/status",
          "ciliumnetworkpolicies/finalizers",
          "ciliumclusterwidenetworkpolicies",
          "ciliumclusterwidenetworkpolicies/status",
          "ciliumclusterwidenetworkpolicies/finalizers",
          "ciliumendpoints",
          "ciliumendpoints/status",
          "ciliumendpoints/finalizers",
          "ciliumnodes",
          "ciliumnodes/status",
          "ciliumnodes/finalizers",
          "ciliumidentities",
          "ciliumidentities/finalizers",
          "ciliumlocalredirectpolicies",
          "ciliumlocalredirectpolicies/status",
          "ciliumlocalredirectpolicies/finalizers",
          "ciliumegressnatpolicies",
          "ciliumendpointslices",
        ],
        "verbs": Array [
          "*",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "kube-system-cilium-operator",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "pods",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
          "delete",
        ],
      },
      Object {
        "apiGroups": Array [
          "discovery.k8s.io",
        ],
        "resources": Array [
          "endpointslices",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services/status",
        ],
        "verbs": Array [
          "update",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "services",
          "endpoints",
          "namespaces",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cilium.io",
        ],
        "resources": Array [
          "ciliumnetworkpolicies",
          "ciliumnetworkpolicies/status",
          "ciliumnetworkpolicies/finalizers",
          "ciliumclusterwidenetworkpolicies",
          "ciliumclusterwidenetworkpolicies/status",
          "ciliumclusterwidenetworkpolicies/finalizers",
          "ciliumendpoints",
          "ciliumendpoints/status",
          "ciliumendpoints/finalizers",
          "ciliumnodes",
          "ciliumnodes/status",
          "ciliumnodes/finalizers",
          "ciliumidentities",
          "ciliumendpointslices",
          "ciliumidentities/status",
          "ciliumidentities/finalizers",
          "ciliumlocalredirectpolicies",
          "ciliumlocalredirectpolicies/status",
          "ciliumlocalredirectpolicies/finalizers",
        ],
        "verbs": Array [
          "*",
        ],
      },
      Object {
        "apiGroups": Array [
          "apiextensions.k8s.io",
        ],
        "resources": Array [
          "customresourcedefinitions",
        ],
        "verbs": Array [
          "create",
          "get",
          "list",
          "update",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "coordination.k8s.io",
        ],
        "resources": Array [
          "leases",
        ],
        "verbs": Array [
          "create",
          "get",
          "update",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRole",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "kube-system-hubble-ui",
    },
    "rules": Array [
      Object {
        "apiGroups": Array [
          "networking.k8s.io",
        ],
        "resources": Array [
          "networkpolicies",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "",
        ],
        "resources": Array [
          "componentstatuses",
          "endpoints",
          "namespaces",
          "nodes",
          "pods",
          "services",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "apiextensions.k8s.io",
        ],
        "resources": Array [
          "customresourcedefinitions",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
      Object {
        "apiGroups": Array [
          "cilium.io",
        ],
        "resources": Array [
          "*",
        ],
        "verbs": Array [
          "get",
          "list",
          "watch",
        ],
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "kube-system-cilium",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "kube-system:cilium",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cilium",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "kube-system-cilium-operator",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "kube-system-cilium-operator",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "cilium-operator",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "kube-system-hubble-ui",
    },
    "roleRef": Object {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "kube-system-hubble-ui",
    },
    "subjects": Array [
      Object {
        "kind": "ServiceAccount",
        "name": "hubble-ui",
        "namespace": "kube-system",
      },
    ],
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "hubble-relay",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-relay",
      "namespace": "kube-system",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 80,
          "protocol": "TCP",
          "targetPort": 4245,
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "hubble-relay",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "hubble-ui",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-ui",
      "namespace": "kube-system",
    },
    "spec": Object {
      "ports": Array [
        Object {
          "port": 80,
          "protocol": "TCP",
          "targetPort": 8081,
        },
      ],
      "selector": Object {
        "app.kubernetes.io/component": "hubble-ui",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "type": "ClusterIP",
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "DaemonSet",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "agent",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "cilium",
      "namespace": "kube-system",
    },
    "spec": Object {
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "agent",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "cilium",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "agent",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "cilium",
          },
        },
        "spec": Object {
          "affinity": Object {
            "nodeAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Object {
                "nodeSelectorTerms": Array [
                  Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "kubernetes.io/os",
                        "operator": "In",
                        "values": Array [
                          "linux",
                        ],
                      },
                    ],
                  },
                ],
              },
            },
            "podAntiAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchExpressions": Array [
                      Object {
                        "key": "k8s-app",
                        "operator": "In",
                        "values": Array [
                          "cilium",
                        ],
                      },
                    ],
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "containers": Array [
            Object {
              "args": Array [
                "--config-dir=/tmp/cilium/config-map",
              ],
              "command": Array [
                "cilium-agent",
              ],
              "env": Array [
                Object {
                  "name": "K8S_NODE_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "apiVersion": "v1",
                      "fieldPath": "spec.nodeName",
                    },
                  },
                },
                Object {
                  "name": "CILIUM_K8S_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
                Object {
                  "name": "CILIUM_CLUSTERMESH_CONFIG",
                  "value": "/var/lib/cilium/clustermesh/",
                },
                Object {
                  "name": "CILIUM_CNI_CHAINING_MODE",
                  "valueFrom": Object {
                    "configMapKeyRef": Object {
                      "key": "cni-chaining-mode",
                      "name": "cilium-config",
                      "optional": true,
                    },
                  },
                },
                Object {
                  "name": "CILIUM_CUSTOM_CNI_CONF",
                  "valueFrom": Object {
                    "configMapKeyRef": Object {
                      "key": "custom-cni-conf",
                      "name": "cilium-config",
                      "optional": true,
                    },
                  },
                },
                Object {
                  "name": "KUBERNETES_SERVICE_HOST",
                  "value": "kubernetes-control.internal.serenacodes.com",
                },
                Object {
                  "name": "KUBERNETES_SERVICE_PORT",
                  "value": "6443",
                },
              ],
              "image": "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2",
              "imagePullPolicy": "IfNotPresent",
              "lifecycle": Object {
                "postStart": Object {
                  "exec": Object {
                    "command": Array [
                      "/cni-install.sh",
                      "--enable-debug=false",
                      "--cni-exclusive=true",
                    ],
                  },
                },
                "preStop": Object {
                  "exec": Object {
                    "command": Array [
                      "/cni-uninstall.sh",
                    ],
                  },
                },
              },
              "livenessProbe": Object {
                "failureThreshold": 10,
                "httpGet": Object {
                  "host": "127.0.0.1",
                  "httpHeaders": Array [
                    Object {
                      "name": "brief",
                      "value": "true",
                    },
                  ],
                  "path": "/healthz",
                  "port": 9876,
                  "scheme": "HTTP",
                },
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 5,
              },
              "name": "cilium-agent",
              "readinessProbe": Object {
                "failureThreshold": 3,
                "httpGet": Object {
                  "host": "127.0.0.1",
                  "httpHeaders": Array [
                    Object {
                      "name": "brief",
                      "value": "true",
                    },
                  ],
                  "path": "/healthz",
                  "port": 9876,
                  "scheme": "HTTP",
                },
                "periodSeconds": 30,
                "successThreshold": 1,
                "timeoutSeconds": 5,
              },
              "securityContext": Object {
                "privileged": true,
              },
              "startupProbe": Object {
                "failureThreshold": 105,
                "httpGet": Object {
                  "host": "127.0.0.1",
                  "httpHeaders": Array [
                    Object {
                      "name": "brief",
                      "value": "true",
                    },
                  ],
                  "path": "/healthz",
                  "port": 9876,
                  "scheme": "HTTP",
                },
                "periodSeconds": 2,
                "successThreshold": 1,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/sys/fs/bpf",
                  "mountPropagation": "Bidirectional",
                  "name": "bpf-maps",
                },
                Object {
                  "mountPath": "/var/run/cilium",
                  "name": "cilium-run",
                },
                Object {
                  "mountPath": "/host/opt/cni/bin",
                  "name": "cni-path",
                },
                Object {
                  "mountPath": "/host/etc/cni/net.d",
                  "name": "etc-cni-netd",
                },
                Object {
                  "mountPath": "/var/lib/cilium/clustermesh",
                  "name": "clustermesh-secrets",
                  "readOnly": true,
                },
                Object {
                  "mountPath": "/tmp/cilium/config-map",
                  "name": "cilium-config-path",
                  "readOnly": true,
                },
                Object {
                  "mountPath": "/lib/modules",
                  "name": "lib-modules",
                  "readOnly": true,
                },
                Object {
                  "mountPath": "/run/xtables.lock",
                  "name": "xtables-lock",
                },
                Object {
                  "mountPath": "/var/lib/cilium/tls/hubble",
                  "name": "hubble-tls",
                  "readOnly": true,
                },
              ],
            },
          ],
          "hostNetwork": true,
          "initContainers": Array [
            Object {
              "command": Array [
                "sh",
                "-ec",
                "cp /usr/bin/cilium-mount /hostbin/cilium-mount;
nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt \\"\${BIN_PATH}/cilium-mount\\" $CGROUP_ROOT;
rm /hostbin/cilium-mount
",
              ],
              "env": Array [
                Object {
                  "name": "CGROUP_ROOT",
                  "value": "/run/cilium/cgroupv2",
                },
                Object {
                  "name": "BIN_PATH",
                  "value": "/opt/cni/bin",
                },
              ],
              "image": "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2",
              "imagePullPolicy": "IfNotPresent",
              "name": "mount-cgroup",
              "securityContext": Object {
                "privileged": true,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/hostproc",
                  "name": "hostproc",
                },
                Object {
                  "mountPath": "/hostbin",
                  "name": "cni-path",
                },
              ],
            },
            Object {
              "command": Array [
                "/init-container.sh",
              ],
              "env": Array [
                Object {
                  "name": "CILIUM_ALL_STATE",
                  "valueFrom": Object {
                    "configMapKeyRef": Object {
                      "key": "clean-cilium-state",
                      "name": "cilium-config",
                      "optional": true,
                    },
                  },
                },
                Object {
                  "name": "CILIUM_BPF_STATE",
                  "valueFrom": Object {
                    "configMapKeyRef": Object {
                      "key": "clean-cilium-bpf-state",
                      "name": "cilium-config",
                      "optional": true,
                    },
                  },
                },
                Object {
                  "name": "KUBERNETES_SERVICE_HOST",
                  "value": "kubernetes-control.internal.serenacodes.com",
                },
                Object {
                  "name": "KUBERNETES_SERVICE_PORT",
                  "value": "6443",
                },
              ],
              "image": "quay.io/cilium/cilium:v1.11.1@sha256:251ff274acf22fd2067b29a31e9fda94253d2961c061577203621583d7e85bd2",
              "imagePullPolicy": "IfNotPresent",
              "name": "clean-cilium-state",
              "resources": Object {
                "requests": Object {
                  "cpu": "100m",
                  "memory": "100Mi",
                },
              },
              "securityContext": Object {
                "privileged": true,
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/sys/fs/bpf",
                  "name": "bpf-maps",
                },
                Object {
                  "mountPath": "/run/cilium/cgroupv2",
                  "mountPropagation": "HostToContainer",
                  "name": "cilium-cgroup",
                },
                Object {
                  "mountPath": "/var/run/cilium",
                  "name": "cilium-run",
                },
              ],
            },
          ],
          "priorityClassName": "system-node-critical",
          "restartPolicy": "Always",
          "serviceAccountName": "cilium",
          "terminationGracePeriodSeconds": 1,
          "tolerations": Array [
            Object {
              "operator": "Exists",
            },
          ],
          "volumes": Array [
            Object {
              "hostPath": Object {
                "path": "/var/run/cilium",
                "type": "DirectoryOrCreate",
              },
              "name": "cilium-run",
            },
            Object {
              "hostPath": Object {
                "path": "/sys/fs/bpf",
                "type": "DirectoryOrCreate",
              },
              "name": "bpf-maps",
            },
            Object {
              "hostPath": Object {
                "path": "/proc",
                "type": "Directory",
              },
              "name": "hostproc",
            },
            Object {
              "hostPath": Object {
                "path": "/run/cilium/cgroupv2",
                "type": "DirectoryOrCreate",
              },
              "name": "cilium-cgroup",
            },
            Object {
              "hostPath": Object {
                "path": "/opt/cni/bin",
                "type": "DirectoryOrCreate",
              },
              "name": "cni-path",
            },
            Object {
              "hostPath": Object {
                "path": "/etc/cni/net.d",
                "type": "DirectoryOrCreate",
              },
              "name": "etc-cni-netd",
            },
            Object {
              "hostPath": Object {
                "path": "/lib/modules",
              },
              "name": "lib-modules",
            },
            Object {
              "hostPath": Object {
                "path": "/run/xtables.lock",
                "type": "FileOrCreate",
              },
              "name": "xtables-lock",
            },
            Object {
              "name": "clustermesh-secrets",
              "secret": Object {
                "defaultMode": 256,
                "optional": true,
                "secretName": "cilium-clustermesh",
              },
            },
            Object {
              "configMap": Object {
                "name": "cilium-config",
              },
              "name": "cilium-config-path",
            },
            Object {
              "name": "hubble-tls",
              "projected": Object {
                "defaultMode": 256,
                "sources": Array [
                  Object {
                    "secret": Object {
                      "items": Array [
                        Object {
                          "key": "ca.crt",
                          "path": "client-ca.crt",
                        },
                        Object {
                          "key": "tls.crt",
                          "path": "server.crt",
                        },
                        Object {
                          "key": "tls.key",
                          "path": "server.key",
                        },
                      ],
                      "name": "hubble-server-certs",
                      "optional": true,
                    },
                  },
                ],
              },
            },
          ],
        },
      },
      "updateStrategy": Object {
        "rollingUpdate": Object {
          "maxUnavailable": 2,
        },
        "type": "RollingUpdate",
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "operator",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
        "io.cilium/app": "operator",
      },
      "name": "cilium-operator",
      "namespace": "kube-system",
    },
    "spec": Object {
      "replicas": 2,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "operator",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "cilium",
          "io.cilium/app": "operator",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxSurge": 1,
          "maxUnavailable": 1,
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "operator",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "cilium",
            "io.cilium/app": "operator",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAntiAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "app.kubernetes.io/component": "operator",
                      "app.kubernetes.io/managed-by": "cdk8s",
                      "app.kubernetes.io/name": "cilium",
                      "io.cilium/app": "operator",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "containers": Array [
            Object {
              "args": Array [
                "--config-dir=/tmp/cilium/config-map",
                "--debug=$(CILIUM_DEBUG)",
              ],
              "command": Array [
                "cilium-operator-generic",
              ],
              "env": Array [
                Object {
                  "name": "K8S_NODE_NAME",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "apiVersion": "v1",
                      "fieldPath": "spec.nodeName",
                    },
                  },
                },
                Object {
                  "name": "CILIUM_K8S_NAMESPACE",
                  "valueFrom": Object {
                    "fieldRef": Object {
                      "apiVersion": "v1",
                      "fieldPath": "metadata.namespace",
                    },
                  },
                },
                Object {
                  "name": "CILIUM_DEBUG",
                  "valueFrom": Object {
                    "configMapKeyRef": Object {
                      "key": "debug",
                      "name": "cilium-config",
                      "optional": true,
                    },
                  },
                },
                Object {
                  "name": "KUBERNETES_SERVICE_HOST",
                  "value": "kubernetes-control.internal.serenacodes.com",
                },
                Object {
                  "name": "KUBERNETES_SERVICE_PORT",
                  "value": "6443",
                },
              ],
              "image": "quay.io/cilium/operator-generic:v1.11.1@sha256:977240a4783c7be821e215ead515da3093a10f4a7baea9f803511a2c2b44a235",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": Object {
                "httpGet": Object {
                  "host": "127.0.0.1",
                  "path": "/healthz",
                  "port": 9234,
                  "scheme": "HTTP",
                },
                "initialDelaySeconds": 60,
                "periodSeconds": 10,
                "timeoutSeconds": 3,
              },
              "name": "cilium-operator",
              "volumeMounts": Array [
                Object {
                  "mountPath": "/tmp/cilium/config-map",
                  "name": "cilium-config-path",
                  "readOnly": true,
                },
              ],
            },
          ],
          "hostNetwork": true,
          "priorityClassName": "system-cluster-critical",
          "restartPolicy": "Always",
          "serviceAccountName": "cilium-operator",
          "tolerations": Array [
            Object {
              "operator": "Exists",
            },
          ],
          "volumes": Array [
            Object {
              "configMap": Object {
                "name": "cilium-config",
              },
              "name": "cilium-config-path",
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "hubble-relay",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-relay",
      "namespace": "kube-system",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "hubble-relay",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "cilium",
        },
      },
      "strategy": Object {
        "rollingUpdate": Object {
          "maxUnavailable": 1,
        },
        "type": "RollingUpdate",
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "hubble-relay",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "cilium",
          },
        },
        "spec": Object {
          "affinity": Object {
            "podAffinity": Object {
              "requiredDuringSchedulingIgnoredDuringExecution": Array [
                Object {
                  "labelSelector": Object {
                    "matchLabels": Object {
                      "app.kubernetes.io/component": "hubble-relay",
                      "app.kubernetes.io/managed-by": "cdk8s",
                      "app.kubernetes.io/name": "cilium",
                    },
                  },
                  "topologyKey": "kubernetes.io/hostname",
                },
              ],
            },
          },
          "automountServiceAccountToken": false,
          "containers": Array [
            Object {
              "args": Array [
                "serve",
              ],
              "command": Array [
                "hubble-relay",
              ],
              "image": "quay.io/cilium/hubble-relay:v1.11.1@sha256:23d40b2a87a5bf94e0365bd9606721c96f78b8304b61725dca45a0b8a6048203",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": Object {
                "tcpSocket": Object {
                  "port": "grpc",
                },
              },
              "name": "hubble-relay",
              "ports": Array [
                Object {
                  "containerPort": 4245,
                  "name": "grpc",
                },
              ],
              "readinessProbe": Object {
                "tcpSocket": Object {
                  "port": "grpc",
                },
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/var/run/cilium",
                  "name": "hubble-sock-dir",
                  "readOnly": true,
                },
                Object {
                  "mountPath": "/etc/hubble-relay",
                  "name": "config",
                  "readOnly": true,
                },
                Object {
                  "mountPath": "/var/lib/hubble-relay/tls",
                  "name": "tls",
                  "readOnly": true,
                },
              ],
            },
          ],
          "restartPolicy": "Always",
          "serviceAccountName": "hubble-relay",
          "terminationGracePeriodSeconds": 0,
          "volumes": Array [
            Object {
              "configMap": Object {
                "items": Array [
                  Object {
                    "key": "config.yaml",
                    "path": "config.yaml",
                  },
                ],
                "name": "hubble-relay-config",
              },
              "name": "config",
            },
            Object {
              "hostPath": Object {
                "path": "/var/run/cilium",
                "type": "Directory",
              },
              "name": "hubble-sock-dir",
            },
            Object {
              "name": "tls",
              "projected": Object {
                "defaultMode": 256,
                "sources": Array [
                  Object {
                    "secret": Object {
                      "items": Array [
                        Object {
                          "key": "ca.crt",
                          "path": "hubble-server-ca.crt",
                        },
                        Object {
                          "key": "tls.crt",
                          "path": "client.crt",
                        },
                        Object {
                          "key": "tls.key",
                          "path": "client.key",
                        },
                      ],
                      "name": "hubble-relay-client-certs",
                    },
                  },
                ],
              },
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "labels": Object {
        "app.kubernetes.io/component": "hubble-ui",
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "hubble-ui",
      "namespace": "kube-system",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app.kubernetes.io/component": "hubble-ui",
          "app.kubernetes.io/managed-by": "cdk8s",
          "app.kubernetes.io/name": "cilium",
        },
      },
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app.kubernetes.io/component": "hubble-ui",
            "app.kubernetes.io/managed-by": "cdk8s",
            "app.kubernetes.io/name": "cilium",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "image": "quay.io/cilium/hubble-ui:v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4",
              "imagePullPolicy": "IfNotPresent",
              "name": "frontend",
              "ports": Array [
                Object {
                  "containerPort": 8080,
                  "name": "http",
                },
              ],
            },
            Object {
              "env": Array [
                Object {
                  "name": "EVENTS_SERVER_PORT",
                  "value": "8090",
                },
                Object {
                  "name": "FLOWS_API_ADDR",
                  "value": "hubble-relay:80",
                },
              ],
              "image": "quay.io/cilium/hubble-ui-backend:v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed",
              "imagePullPolicy": "IfNotPresent",
              "name": "backend",
              "ports": Array [
                Object {
                  "containerPort": 8090,
                  "name": "grpc",
                },
              ],
            },
            Object {
              "args": Array [
                "-c",
                "/etc/envoy.yaml",
                "-l",
                "info",
              ],
              "command": Array [
                "envoy",
              ],
              "image": "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935",
              "imagePullPolicy": "IfNotPresent",
              "name": "proxy",
              "ports": Array [
                Object {
                  "containerPort": 8081,
                  "name": "http",
                },
              ],
              "volumeMounts": Array [
                Object {
                  "mountPath": "/etc/envoy.yaml",
                  "name": "hubble-ui-envoy-yaml",
                  "subPath": "envoy.yaml",
                },
              ],
            },
          ],
          "securityContext": Object {
            "runAsUser": 1001,
          },
          "serviceAccountName": "hubble-ui",
          "volumes": Array [
            Object {
              "configMap": Object {
                "name": "hubble-ui-envoy",
              },
              "name": "hubble-ui-envoy-yaml",
            },
          ],
        },
      },
    },
  },
  Object {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "Ingress",
    "metadata": Object {
      "annotations": Object {
        "cert-manager.io/cluster-issuer": "serena-ca",
        "cert-manager.io/common-name": "hubble.internal.serenacodes.com",
      },
      "labels": Object {
        "app.kubernetes.io/managed-by": "cdk8s",
        "app.kubernetes.io/name": "cilium",
      },
      "name": "cilium-hubble-ui",
      "namespace": "kube-system",
    },
    "spec": Object {
      "ingressClassName": "nginx",
      "rules": Array [
        Object {
          "host": "hubble.internal.serenacodes.com",
          "http": Object {
            "paths": Array [
              Object {
                "backend": Object {
                  "service": Object {
                    "name": "hubble-ui",
                    "port": Object {
                      "number": 8081,
                    },
                  },
                },
                "path": "/",
                "pathType": "Prefix",
              },
            ],
          },
        },
      ],
      "tls": Array [
        Object {
          "hosts": Array [
            "hubble.internal.serenacodes.com",
          ],
          "secretName": "hubble-ingress",
        },
      ],
    },
  },
]
`;
